# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

name: ðŸš€ Deploy the apps

on:
  workflow_dispatch: {} # manual trigger only
  push: {branches: [apps]} # TODO: remove this line

concurrency:
  group: ${{ github.ref }}-apps
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy the apps
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v4

      - name: Set up the SSH key
        run: |
          mkdir -p ~/.ssh && echo "${{ secrets.SSH_DEPLOY_KEY }}" > ~/.ssh/ssh_key && chmod 600 ~/.ssh/ssh_key
          cat > ~/.ssh/config <<EOF
          Host ssh-server
            HostName ${{ secrets.SSH_HOST }}
            Port ${{ secrets.SSH_PORT }}
            User ${{ secrets.SSH_USER }}
            IdentityFile ~/.ssh/ssh_key
          EOF
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create the remote Docker context and switch to it
        run: docker context create remote --docker "host=ssh://ssh-server" && docker context use remote

      - name: Log in to Docker Hub (to prevent rate limiting issues)
        run: ssh ssh-server "echo '${TOKEN}' | docker login --username ${LOGIN} docker.io --password-stdin"
        env: {LOGIN: "${{ secrets.DOCKER_HUB_LOGIN }}", TOKEN: "${{ secrets.DOCKER_HUB_TOKEN }}"}

      - name: Deploy
        run: |
          docker compose pull --policy=always  # pull the latest images
          docker compose down --remove-orphans # gracefully stop the services
          docker volume prune --force          # remove unused local volumes
          docker compose up --detach --wait    # start the services

      - name: Remove the sensitive data
        if: always()
        run: rm -rf ~/.ssh
