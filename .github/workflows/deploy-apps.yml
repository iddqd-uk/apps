# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

name: ðŸš€ Deploy the apps

on:
  workflow_dispatch: {} # manual trigger only

concurrency:
  group: ${{ github.ref }}-apps
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy the apps
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v4

      - name: Create SSH key
        run: mkdir -p ~/.ssh && echo "${{ secrets.SSH_DEPLOY_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
      - name: Add SSH key to the agent
        run: echo -e "\nHost ${{ secrets.SSH_HOST }}\n  IdentityFile ~/.ssh/id_rsa\n" >> ~/.ssh/config
      - name: Add SSH key to known hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create the Docker context
        run: docker context create remote --docker "host=ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PORT }}"
      - name: Set the Docker context as default
        run: docker context use remote

      - name: Log in to Docker Hub (to prevent rate limiting issues)
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "echo '${{ secrets.DOCKER_HUB_TOKEN }}' | docker login --username ${{ secrets.DOCKER_HUB_LOGIN }} docker.io --password-stdin"

      - name: Pull the latest images
        run: docker compose pull --policy=always
      - name: Gracefully stop the services
        run: docker compose down --remove-orphans
      - name: Remove unused local volumes
        run: docker volume prune --force
      - name: Start the services
        run: docker compose up --detach --wait

      - name: Remove the sensitive data
        if: always()
        run: rm -rf ~/.ssh
