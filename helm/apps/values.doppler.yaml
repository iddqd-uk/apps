# {{/*   The following message will be printed to the output file as a notice.   */}}
# {{        print "      This file is generated automatically; DO NOT EDIT."       }}
# {{    print "To make changes, update the `values.doppler.yaml` file instead."    }}
# {{/* Use the Doppler `secrets substitute` command to generate the result file. */}}

httpProxy:
  enabled: true
  appName: proxy-3proxy
  namespace: proxy-3proxy
  # renovate: source=github-releases name=tarampampam/3proxy-docker
  version: 1.10.0 # https://github.com/tarampampam/3proxy-docker/releases
  replicaCount: 2
  dns: {primaryResolver: 77.88.8.8, secondaryResolver: 8.8.8.8}
  logs: {disabled: false}

tgProxy:
  enabled: true
  appName: proxy-mtg
  namespace: proxy-mtg
  # renovate: source=github-releases name=9seconds/mtg
  version: 2.1.7 # https://github.com/9seconds/mtg/releases
  domainName: ww2.iddqd.uk # you need to regenerate the secret whenever the domain name is changed!
  replicaCount: 1

tgRssBot:
  enabled: true
  appName: tg-rss-bot
  namespace: tg-rss-bot
  # TODO: add renovate configuration
  version: 2.0.0-alpha-13 # https://github.com/tarampampam/rssbot-docker/releases

kubeIddqd: # this is the just an example of the configuration to expose http service over the Ingress with TLS
  enabled: true
  appName: kube-iddqd
  namespace: kube-iddqd
  nginx: {image: ghcr.io/nginxinc/nginx-unprivileged, tag: 1.27-alpine}

doppler:
  enabled: true
  serviceToken: "{{ .DOPPLER_K8S_SERVICE_TOKEN }}"
  secrets: # the list of secrets is stored in Doppler and should be used as a reference (update it manually as needed)
    httpProxyLogin: HTTP_PROXY_LOGIN
    httpProxyPassword: HTTP_PROXY_PASSWORD
    httpProxyPort: HTTP_PROXY_PORT
    tgProxySecret: TG_PROXY_SECRET
    tgRssBotAuthToken: TG_RSS_BOT_AUTH_TOKEN
    tgRssBotAdminID: TG_RSS_BOT_ADMIN_ID
