# {{/*   The following message will be printed to the output file as a notice.   */}}
# {{        print "      This file is generated automatically; DO NOT EDIT."       }}
# {{    print "To make changes, update the `values.doppler.yaml` file instead."    }}
# {{/* Use the Doppler `secrets substitute` command to generate the result file. */}}

traefik:
  namespaceOverride: ingress
  nodeSelector: {node/role: master}
  #ingressRoute: {dashboard: {enabled: true}} # enable the Traefik dashboard on the traefik endpoint
  ports:
    3proxy-http:
      port: !!int {{ .HTTP_PROXY_PORT }}
      protocol: TCP
      expose: {default: true}
    web:
      redirections: {entryPoint: {to: websecure, scheme: https}} # redirect HTTP to HTTPS
  globalArguments: [] # disable `checknewversion` and `sendanonymoususage`
  logs:
    general: {format: json} # log in JSON format
    access: {enabled: false} # disable access logs
  resources:
    limits: {memory: 1024Mi}
    requests: {memory: 256Mi}

external-secrets:
  installCRDs: true
  namespaceOverride: secrets

prometheus:
  server:
    global: {scrape_interval: 60s}
    retention: "6h" # reduce in-memory data for queries and recent scrapes
    retentionSize: "1GB" # reduce the wal (write-ahead log) size
    extraArgs:
      storage.tsdb.min-block-duration: "2h" # reduce the on-disk storage size
      storage.tsdb.wal-segment-size: "16MB"
      query.max-concurrency: "10" # limit the number of concurrent queries
      query.max-samples: "1000000" # limit the number of samples per query
      log.format: json
    remoteWrite:
      - url: "{{ .GRAFANA_CLOUD_PROM_URL }}"
        basic_auth:
          username: "{{ .GRAFANA_CLOUD_PROM_USER }}"
          password: "{{ .GRAFANA_CLOUD_PROM_PASSWORD }}"
    resources:
      limits: {memory: 1024Mi}
      requests: {memory: 512Mi}
  alertmanager: {enabled: false}
  prometheus-pushgateway: {enabled: false}

doppler:
  enabled: true
  serviceToken: "{{ .DOPPLER_K8S_SERVICE_TOKEN }}"
