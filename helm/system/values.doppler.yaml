# {{/*   The following message will be printed to the output file as a notice.   */}}
# {{        print "      This file is generated automatically; DO NOT EDIT."       }}
# {{    print "To make changes, update the `values.doppler.yaml` file instead."    }}
# {{/* Use the Doppler `secrets substitute` command to generate the result file. */}}

traefik:
  namespaceOverride: ingress
  nodeSelector: {node/role: master}
  # enable the Traefik dashboard on the traefik endpoint at http://<traefik>:8080/dashboard/
  #ingressRoute: {dashboard: {enabled: true}}
  ports:
    3proxy-http:
      port: !!int {{ .HTTP_PROXY_PORT }}
      protocol: TCP
      expose: {default: true}
    web:
      redirections: {entryPoint: {to: websecure, scheme: https}} # redirect HTTP to HTTPS
    websecure:
      tls: {certResolver: letsencrypt} # use configured below certificates resolver for HTTPS
  persistence:
    enabled: true
    name: certs
    path: /certs
    existingClaim: traefik-certs-pvc
  certificatesResolvers:
    letsencrypt:
      acme:
        #caServer: https://acme-staging-v02.api.letsencrypt.org/directory # staging server
        caServer: https://acme-v02.api.letsencrypt.org/directory # production server
        email: "{{ .LETSENCRYPT_CLOUDFLARE_EMAIL }}"
        storage: /certs/acme.json
        dnsChallenge:
          provider: cloudflare
          resolvers: ["1.0.0.1:53", "1.1.1.1:53", "8.8.8.8:53"]
  env:
    - {name: CF_DNS_API_TOKEN, value: "{{ .LETSENCRYPT_CLOUDFLARE_TOKEN }}"} # Cloudflare API token
  providers:
    kubernetesCRD:
      # in Traefik >=2.5, cross-namespace references for resources like middlewares are restricted by default
      allowCrossNamespace: true
  logs:
    general: {format: json} # log in JSON format
    access: {enabled: false} # disable access logs
  resources:
    requests: {memory: 256Mi}
    limits: {memory: 1024Mi}

external-secrets:
  installCRDs: true
  namespaceOverride: secrets
  log: {level: warn}
  webhook: {log: {level: warn}}
  certController: {log: {level: warn}}
